package it.epicode.racheleburgio.dipendente;


import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import java.io.IOException;

@RestController
@RequestMapping("/api/dipendenti")
public class DipendenteController {

    @Autowired
    private DipendenteService dipendenteService;

    @Operation(summary = "Carica un'immagine per un dipendente")
    @ApiResponses(value = {
            @ApiResponse(responseCode = "200", description = "Immagine caricata con successo"),
            @ApiResponse(responseCode = "404", description = "Dipendente non trovato")
    })
    @PostMapping("/{id}/upload")
    public ResponseEntity<String> uploadImmagine(@PathVariable Long id, @RequestParam("file") MultipartFile file) {
        try {
            dipendenteService.salvaImmagine(id, file);
            return ResponseEntity.ok("Immagine caricata con successo!");
        } catch (IOException e) {
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Errore durante il caricamento");
        }
    }

    @Operation(summary = "Recupera l'immagine di un dipendente")
    @GetMapping("/{id}/immagine")
    public ResponseEntity<byte[]> getImmagine(@PathVariable Long id) {
        byte[] immagine = dipendenteService.getImmagine(id);
        return ResponseEntity.ok()
                .header(HttpHeaders.CONTENT_TYPE, MediaType.IMAGE_JPEG_VALUE)
                .body(immagine);
    }

    @Operation(summary = "Elimina l'immagine di un dipendente")
    @DeleteMapping("/{id}/immagine")
    public ResponseEntity<String> eliminaImmagine(@PathVariable Long id) {
        dipendenteService.eliminaImmagine(id);
        return ResponseEntity.ok("Immagine eliminata con successo!");
    }
}
